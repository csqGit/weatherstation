<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bozpower.mapper.UserMapper">
<cache>
		<property name="timeToIdleSeconds" value="60"></property><!--&lt;!&ndash;当缓存闲置60秒后销毁&ndash;&gt;-->
        <property name="timeToLiveSeconds" value="160"></property><!--&lt;!&ndash;缓存存在160秒后销毁&ndash;&gt;-->
        <property name="maxEntriesLocalHeap" value="1000"></property>
        <property name="maxEntriesLocalDisk" value="10000000"></property>
        <property name="memoryStoreEvictionPolicy" value="LRU"></property>
	</cache>
	<resultMap type="User" id="UserMap">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="username" property="username"
			jdbcType="VARCHAR" />
		<result column="password" property="password"
			jdbcType="VARCHAR" />
		<result column="remarks" property="remarks" jdbcType="VARCHAR" />
		<!-- <result column="user_permission" property="userPermission" jdbcType="INTEGER" /> -->
		<association property="companyId">
			<!-- 需要注意，column的属性为数据库中关联字段的名称 -->
			<id property="id" column="company_id" jdbcType="INTEGER"/>
			
			<result column="company_name" property="companyName" jdbcType="VARCHAR"/>
			<result column="device_number" property="deviceNumber" jdbcType="INTEGER"/>
			<result column="remarks" property="remarks" jdbcType="VARCHAR"/>
		</association>
	</resultMap>

	<select id="userLogin" resultMap="UserMap">
		select u.*, c.* from user_tb u, company_tb c
		where
			u.company_id = c.id
		and 
			username = #{username}
		and 
			password = #{password}
	</select>
	
	<!-- 用户名查询 -->
	<select id="selectUserByUsername" parameterType="java.lang.String" resultMap="UserMap">
		select 
			u.username, u.password, u.company_id, u.remarks, c.company_name 
		from 
			user_tb u
		left join
			company_tb c
		on 
			u.company_id = c.id
		where
			u.company_id = c.id
		and 
			username = #{username}
	</select>
	
	
	<select id="selectUser" resultMap="UserMap">
		select 
			u.id, u.username, u.password, u.company_id, u.remarks, c.company_name ,c.id
		from 
			user_tb u
		left join
			company_tb c
		on 
			u.company_id = c.id
		where
			u.company_id = c.id
	</select>
	
	<select id="selectUserList" resultMap="UserMap">
		select 
			u.username, u.password, u.company_id, u.remarks, c.company_name 
		from 
			user_tb u
		left join
			company_tb c
		on 
			u.company_id = c.id
		where
			u.company_id = c.id
		<if test="pages != 0">
			limit
				#{startPage}, #{pages}
		</if>
	</select>
	
		<select id="selectUserById" parameterType="java.lang.Integer" resultMap="UserMap">
		select 
			u.username, u.password, c.id, c.company_name ,u.remarks
		from 
			user_tb u
		left join
			company_tb c
		on 
			u.company_id = c.id
		where u.id = #{id}
	</select>
	
	<insert id="insertUser" parameterType="User">
		insert into 
		user_tb (username, password, company_id, remarks)
		values 
			(#{username}, #{password},#{companyId.id},#{remarks})
	</insert>
	
	<update id="updateUser" parameterType="User">
		update user_tb
		<trim prefix="set" suffixOverrides=",">
			<if test="username != null">
				username = #{username},
			</if>
			<if test="password != null">
				password = #{password},
			</if>
			<if test="companyId.id != 0">
				company_id = #{companyId.id},
			</if>
			<if test="remarks != null">
				remarks = #{remarks},
			</if>
		</trim>
		where 
			id = #{id}
	</update>
	
	<delete id="deleteUserById" parameterType="java.lang.Integer">
		delete from 
			user_tb
		where 
			id = #{id}
	</delete>



</mapper>